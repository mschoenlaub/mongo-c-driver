<?xml version="1.0"?>
<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      style="function"
      xmlns:api="http://projectmallard.org/experimental/api/"
      xmlns:ui="http://projectmallard.org/experimental/ui/"
      id="mongoc_handshake_data_append">
  <info>
    <link type="guide" xref="" group="function"/>
  </info>
  <title>mongoc_handshake_data_append()</title>

  <section id="synopsis">
    <title>Synopsis</title>
    <synopsis><code mime="text/x-csrc"><![CDATA[bool
mongoc_handshake_data_append (const char *driver_name,
                              const char *driver_version,
                              const char *platform);
]]></code></synopsis>
  </section>

  <section id="description">
    <title>Description</title>
    <p>This function is intended for use by drivers which wrap the C Driver.</p>
    <p><code>mongoc_handshake_data_append()</code> will store the given strings as handshake data about the system and driver by appending them to the handshake data for the underlying C Driver (see <link xref="#example">example</link>). These values, along with other handshake data collected during <code xref="mongoc_init">mongoc_init</code> will be sent to the server as part of the initial connection handshake (<link href="https://docs.mongodb.org/manual/reference/command/isMaster/">"isMaster"</link>) in the "client" document. This function cannot be called more than once, or after a handshake has been initiated.</p>
    <p>The passed in strings are copied, and don't have to remain valid after the call to <code>mongoc_handshake_data_append()</code>. The driver may store truncated versions of the passed in strings.</p>
    <p>All arguments are optional.</p>
    <note style="critical">
      <p>This function allocates memory, and therefore caution should be used when using this in conjunction with <code xref="bson:bson_mem_set_vtable">bson_mem_set_vtable</code>. If this function is called before <code xref="bson:bson_mem_set_vtable">bson_mem_set_vtable</code>, then <code xref="bson:bson_mem_restore_vtable">bson_mem_restore_vtable</code> must be called before calling <code xref="mongoc_cleanup">mongoc_cleanup</code>. Failure to do so will result in memory being freed by the wrong allocator.</p>
    </note>
  </section>

  <section id="parameters">
    <title>Parameters</title>
    <table>
      <tr><td><p>driver_name</p></td><td><p>An optional string storing the name of the wrapping driver.</p></td></tr>
      <tr><td><p>driver_version</p></td><td><p>An optional string storing the version of the wrapping driver.</p></td></tr>
      <tr><td><p>platform</p></td><td><p>An optional string storing any information about the current platform, for example configure options or compile flags.</p></td></tr>
    </table>
  </section>

  <section id="return">
    <title>Returns</title>
    <p>true if the given fields are set successfully. Otherwise, it returns false and logs an error.</p>
  </section>

  <section id="availability">
    <title>Availability</title>
    <p>This feature is experimental and requires that the MongoDB C driver was compiled with <code>--enable-experimental-features=yes</code>.</p>
  </section>

  <section id="example">
    <title>Example</title>
    <p>The default handshake data the driver sends with "isMaster" looks something like:</p>
    <screen><code>client: {
  driver: {
    name: "mongoc",
    version: "1.4.0"
  },
  os: {...},
  platform: "CC=gcc CFLAGS=-Wall -pedantic"
}</code></screen>

    <p>If we call <code>mongoc_handshake_data_append ("phongo", "1.1.8", "CC=clang")</code> and it returns true, the driver sends handshake data like:</p>
    <screen><code>client: {
  driver: {
    name: "mongoc / phongo",
    version: "1.4.0 / 1.1.8"
  },
  os: {...},
  platform: "CC=gcc CFLAGS=-Wall -pedantic / CC=clang"
}</code></screen>
  </section>

</page>
